# syntax = docker/dockerfile:1.0-experimental


ARG RHEL_VERSION
FROM registry.access.redhat.com/ubi8/ubi-init:${RHEL_VERSION:-latest}

# ssh, systemd, passwordless sudo container for ansible target use etc
#
# NOTE! SECURITY implications, container must be run in privilged mode 
#
# docker run -d -p 22:22 --rm --privileged --name rhel8-ssh rhel8-ssh

LABEL maintainer="Tok - Tony Kay tony.g.kay@gmail.com"

ENV SSH_PORT=22
ENV SSH_USER=devops
ENV SSH_KEY_NAME=devops

# These keys are "well known" like vagrant keys - they are NOT for production use
ENV SSH_PUBLIC_KEY_URL=http://www.opentlc.com/download/ansible_bootcamp/ssh_keys/provision_key.pub
ENV SSH_PRIVATE_KEY_URL=http://www.opentlc.com/download/ansible_bootcamp/ssh_keys/provision_key.pem

# 1) Register to Red Hat Network (a yum server or EPEL would be an alternative
# 2) Install, configure, and enable sshd
# 3) Add a user and ssh public key 
# 4) OPTIONAL, enable passwordless sudo   

# RUN --mount=type=secret,id=rhn,dst=/tmp/rhn_subscription.sh bash /tmp/rhn_subscription.sh && \

RUN yum update -y && \
    yum install -y python3 sudo && \
    yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm && \
    yum install -y openssh-server && \
    echo "RSAAuthentication yes" >> /etc/ssh/sshd_config && \
    echo "PubkeyAuthentication yes" >> /etc/ssh/sshd_config && \
    ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key && \
    systemctl enable sshd.service && \
    useradd ${SSH_USER} && \ 
    mkdir -p /home/${SSH_USER}/.ssh && \
    curl -LSs ${SSH_PUBLIC_KEY_URL} >> /home/${SSH_USER}/.ssh/authorized_keys && \
    chmod 600 /home/${SSH_USER}/.ssh/authorized_keys && chmod 700 /home/${SSH_USER}/.ssh && \
    curl -s ${SSH_PRIVATE_KEY_URL} -o /home/${SSH_USER}/.ssh/${SSH_KEY_NAME}.pem && \
    chmod 0400 /home/${SSH_USER}/.ssh/${SSH_KEY_NAME}.pem && \
    chown -R ${SSH_USER}:${SSH_USER} /home/${SSH_USER}/.ssh && \
    echo "${SSH_USER} ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers && \
    rm /etc/yum.repos.d/epel* && \
    yum clean all && \
    rm -rf /var/cache/yum

EXPOSE ${SSH_PORT:-22}

COPY docker-entrypoint.sh /docker-entrypoint.sh

ENTRYPOINT ["/docker-entrypoint.sh"]

CMD ["/sbin/init"]
